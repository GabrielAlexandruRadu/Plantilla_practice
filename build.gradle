plugins {
    id 'java'
    id 'io.quarkus'
}

group 'com.example.taskmanager'
version '1.0.0-SNAPSHOT'

repositories {
    mavenCentral()
    mavenLocal()
    maven { url "https://maven.quarkus.io" }
}

dependencies {
    implementation enforcedPlatform("${quarkusPlatformGroupId}:${quarkusPlatformArtifactId}:${quarkusPlatformVersion}")
    // mappers
    implementation 'org.mapstruct:mapstruct:1.5.3.Final'
    annotationProcessor 'org.mapstruct:mapstruct-processor:1.5.3.Final'

    // CDI API for dependency injection
    implementation 'jakarta.enterprise:jakarta.enterprise.cdi-api:2.0.2'

    // For Lombok
    compileOnly 'org.projectlombok:lombok:1.18.20'
    annotationProcessor 'org.projectlombok:lombok:1.18.20'

    //
    implementation 'io.quarkus:quarkus-resteasy-reactive'
    implementation 'io.quarkus:quarkus-resteasy-reactive-jackson'
    implementation 'io.quarkus:quarkus-arc'
    implementation 'io.quarkus:quarkus-hibernate-orm'
    implementation 'io.quarkus:quarkus-jdbc-h2'
    implementation 'io.quarkus:quarkus-liquibase'
    implementation 'jakarta.persistence:jakarta.persistence-api:2.2.3'
    implementation 'net.bytebuddy:byte-buddy:1.14.2'
    implementation 'io.smallrye.reactive:mutiny'
    implementation 'io.quarkus:quarkus-smallrye-reactive-messaging'
    implementation 'io.quarkus:quarkus-hibernate-orm-panache'

    //aws
    implementation 'io.quarkus:quarkus-smallrye-jwt'


    // tests implementations
    testImplementation 'com.github.database-rider:rider-core:1.44.0'
    testImplementation 'com.github.database-rider:rider-junit5:1.44.0'
    testImplementation 'com.github.database-rider:rider-cdi:1.44.0'
    testImplementation 'org.dbunit:dbunit:2.7.3'
    testImplementation 'io.quarkus:quarkus-junit5'
    testImplementation 'io.rest-assured:rest-assured'
    testImplementation 'org.mockito:mockito-core:4.6.1'
    testImplementation 'org.mockito:mockito-junit-jupiter:4.6.1'
    testImplementation 'io.quarkus:quarkus-junit5-mockito:2.11.0.Final'
    testImplementation 'jakarta.transaction:jakarta.transaction-api:2.0.1'
    testImplementation 'com.h2database:h2:2.1.214'

}


java {
    sourceCompatibility = JavaVersion.VERSION_17
    targetCompatibility = JavaVersion.VERSION_17
}

compileJava {
    options.annotationProcessorPath = configurations.annotationProcessor
    options.compilerArgs += '-Amapstruct.defaultComponentModel=jakarta'
}

test {
    useJUnitPlatform()
    systemProperty "java.util.logging.manager", "org.jboss.logmanager.LogManager"
}

tasks.withType(Test).configureEach {
    jvmArgs += '-Dnet.bytebuddy.experimental=true'
}


